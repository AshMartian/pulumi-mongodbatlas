"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * `mongodbatlas..EncryptionAtRest` Atlas encrypts your data at rest using encrypted storage media.
 * Using keys you manage with AWS KMS, Atlas encrypts your data a second time when it writes it to the MongoDB encrypted storage engine.
 * You can use the following clouds: AWS CMK, AZURE KEY VAULT and GOOGLE KEY VAULT to encrypt the MongoDB master encryption keys.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = new mongodbatlas.EncryptionAtRest("test", {
 *     awsKms: {
 *         access_key_id: "AKIAIOSFODNN7EXAMPLE",
 *         customer_master_key_id: "030gce02-586d-48d2-a966-05ea954fde0g",
 *         enabled: true,
 *         region: "US_EAST_1",
 *         secret_access_key: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY",
 *     },
 *     azureKeyVault: {
 *         azure_environment: "AZURE",
 *         client_id: "g54f9e2-89e3-40fd-8188-EXAMPLEID",
 *         enabled: true,
 *         key_identifier: "https://EXAMPLEKeyVault.vault.azure.net/keys/EXAMPLEKey/d891821e3d364e9eb88fbd3d11807b86",
 *         key_vault_name: "EXAMPLEKeyVault",
 *         resource_group_name: "ExampleRGName",
 *         secret: "EXAMPLESECRET",
 *         subscription_id: "0ec944e3-g725-44f9-a147-EXAMPLEID",
 *         tenant_id: "e8e4b6ba-ff32-4c88-a9af-EXAMPLEID",
 *     },
 *     googleCloudKms: {
 *         enabled: true,
 *         key_version_resource_id: "projects/my-project-common-0/locations/us-east4/keyRings/my-key-ring-0/cryptoKeys/my-key-0/cryptoKeyVersions/1",
 *         service_account_key: "{\"type\": \"service_account\",\"project_id\": \"my-project-common-0\",\"private_key_id\": \"e120598ea4f88249469fcdd75a9a785c1bb3\",\"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEuwIBA(truncated)SfecnS0mT94D9\\n-----END PRIVATE KEY-----\\n\",\"client_email\": \"my-email-kms-0@my-project-common-0.iam.gserviceaccount.com\",\"client_id\": \"10180967717292066\",\"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/my-email-kms-0%40my-project-common-0.iam.gserviceaccount.com\"}",
 *     },
 *     projectId: "<PROJECT-ID>",
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-mongodbatlas/blob/master/website/docs/r/encryption_at_rest.html.markdown.
 */
class EncryptionAtRest extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["awsKms"] = state ? state.awsKms : undefined;
            inputs["azureKeyVault"] = state ? state.azureKeyVault : undefined;
            inputs["googleCloudKms"] = state ? state.googleCloudKms : undefined;
            inputs["projectId"] = state ? state.projectId : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.projectId === undefined) {
                throw new Error("Missing required property 'projectId'");
            }
            inputs["awsKms"] = args ? args.awsKms : undefined;
            inputs["azureKeyVault"] = args ? args.azureKeyVault : undefined;
            inputs["googleCloudKms"] = args ? args.googleCloudKms : undefined;
            inputs["projectId"] = args ? args.projectId : undefined;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(EncryptionAtRest.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing EncryptionAtRest resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new EncryptionAtRest(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of EncryptionAtRest.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EncryptionAtRest.__pulumiType;
    }
}
exports.EncryptionAtRest = EncryptionAtRest;
/** @internal */
EncryptionAtRest.__pulumiType = 'mongodbatlas:index/encryptionAtRest:EncryptionAtRest';
//# sourceMappingURL=encryptionAtRest.js.map