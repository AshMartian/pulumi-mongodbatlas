"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * `mongodbatlas..ProjectIpWhitelist` provides an IP Whitelist entry resource. The whitelist grants access from IPs, CIDRs or AWS Security Groups (if VPC Peering is enabled) to clusters within the Project.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 *
 * > **IMPORTANT:**
 * When you remove an entry from the whitelist, existing connections from the removed address(es) may remain open for a variable amount of time. How much time passes before Atlas closes the connection depends on several factors, including how the connection was established, the particular behavior of the application or driver using the address, and the connection protocol (e.g., TCP or UDP). This is particularly important to consider when changing an existing IP address or CIDR block as they cannot be updated via the Provider (comments can however), hence a change will force the destruction and recreation of entries.
 *
 *
 * ## Example Usage
 *
 * ### Using CIDR Block
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = new mongodbatlas.ProjectIpWhitelist("test", {
 *     cidrBlock: "1.2.3.4/32",
 *     comment: "cidr block for tf acc testing",
 *     projectId: "<PROJECT-ID>",
 * });
 * ```
 *
 * ### Using IP Address
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = new mongodbatlas.ProjectIpWhitelist("test", {
 *     comment: "ip address for tf acc testing",
 *     ipAddress: "2.3.4.5",
 *     projectId: "<PROJECT-ID>",
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-mongodbatlas/blob/master/website/docs/r/project_ip_whitelist.html.markdown.
 */
class ProjectIpWhitelist extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["awsSecurityGroup"] = state ? state.awsSecurityGroup : undefined;
            inputs["cidrBlock"] = state ? state.cidrBlock : undefined;
            inputs["comment"] = state ? state.comment : undefined;
            inputs["ipAddress"] = state ? state.ipAddress : undefined;
            inputs["projectId"] = state ? state.projectId : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.projectId === undefined) {
                throw new Error("Missing required property 'projectId'");
            }
            inputs["awsSecurityGroup"] = args ? args.awsSecurityGroup : undefined;
            inputs["cidrBlock"] = args ? args.cidrBlock : undefined;
            inputs["comment"] = args ? args.comment : undefined;
            inputs["ipAddress"] = args ? args.ipAddress : undefined;
            inputs["projectId"] = args ? args.projectId : undefined;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(ProjectIpWhitelist.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing ProjectIpWhitelist resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new ProjectIpWhitelist(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ProjectIpWhitelist.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProjectIpWhitelist.__pulumiType;
    }
}
exports.ProjectIpWhitelist = ProjectIpWhitelist;
/** @internal */
ProjectIpWhitelist.__pulumiType = 'mongodbatlas:index/projectIpWhitelist:ProjectIpWhitelist';
//# sourceMappingURL=projectIpWhitelist.js.map